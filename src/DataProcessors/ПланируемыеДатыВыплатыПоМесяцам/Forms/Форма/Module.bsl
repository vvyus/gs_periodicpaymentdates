#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)                                   
		
	Параметры.ДополнительнаяОбработкаСсылка=ГСП_ОбщийМодульСервер.ПолучитьСсылкуНаОбработкуХранилище(Истина);
	СохрНастройки = ГСП_ОбщийМодульСервер.ПолучитьСохраненныеНастройки(Параметры.ДополнительнаяОбработкаСсылка);
	Если СохрНастройки <> Неопределено И ТипЗнч(СохрНастройки)=Тип("ТаблицаЗначений") И СохрНастройки.Количество()>0 Тогда
		ТаблицаНастроек.Загрузить(СохрНастройки);
	КонецЕсли;	  
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ТаблицаНастроек", "ТолькоПросмотр", не ПроверкаДоступностиВводаДанных());
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ПроверкаДоступностиВводаДанных() Тогда	                     
		ТекстСообщения="Ввод данных не доступен!"+Символы.ВК+
		"Могут вносить изменения только пользователи с ролью Полные права"+Символы.ВК+
		"или ролью Добавление изменение дополнительных отчетов и обработок!";
		
		Сообщение = СтрШаблон(НСтр("ru = 'Период %1 уже есть в списке.'"), ТекстСообщения);
		ОбщегоНазначенияКлиент.СообщитьПользователю(Сообщение);            	
		
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаНастроек

&НаКлиенте
Процедура ТаблицаНастроекПериодПриИзменении(Элемент)
	ТекущиеДанные = ТекущийЭлемент.ТекущиеДанные;
	Если ТекущиеДанные<>Неопределено Тогда 
		ТекущиеДанные.Период=НачалоМесяца(ТекущиеДанные.Период);
        НовоеЗначение = ТекущиеДанные.Период;
        
        Если ЗначениеЗаполнено(НовоеЗначение) Тогда 
            
            НайденныеСтроки = ТаблицаНастроек.НайтиСтроки(Новый Структура("Период",НовоеЗначение));
            
            Если НайденныеСтроки.Количество()>1 Тогда 
				Сообщение = СтрШаблон(НСтр("ru = 'Период %1 уже есть в списке.'"), НовоеЗначение);
				ОбщегоНазначенияКлиент.СообщитьПользователю(Сообщение);            	
                ТекущиеДанные.Период = Неопределено;
			Иначе 
                ТаблицаНастроек.Сортировать("Период Возр");
            КонецЕсли;
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция - Проверка доступности ввода данных
// 
// Возвращаемое значение:
//  Булево - доступность ввода данных
//
Функция ПроверкаДоступностиВводаДанных()
	Если РольДоступна(Метаданные.Роли.ДобавлениеИзменениеДополнительныхОтчетовИОбработок) 
		или РольДоступна(Метаданные.Роли.ПолныеПрава) 
		Тогда
		Результат=Истина;
	Иначе	
		Результат=Ложь;
	КонецЕсли;	                                                    
	Возврат Результат;	
КонецФункции

&НаСервере                                                          
Процедура СохранитьНастройкиНаСервере()                             
	// если параметр не пустой, был заполнен при создании на сервере
	Если ЗначениеЗаполнено(Параметры.ДополнительнаяОбработкаСсылка) Тогда
		СохраняемоеЗначение = ТаблицаНастроек.Выгрузить(); 
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Справочник.ДополнительныеОтчетыИОбработки");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Параметры.ДополнительнаяОбработкаСсылка);
			Блокировка.Заблокировать();
			ДополнительнаяОбработкаОбъект = Параметры.ДополнительнаяОбработкаСсылка.ПолучитьОбъект();
			ДополнительнаяОбработкаОбъект.ХранилищеНастроек = Новый ХранилищеЗначения(СохраняемоеЗначение);
			ДополнительнаяОбработкаОбъект.Записать();
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)   
	Если ПроверкаДоступностиВводаДанных() Тогда
		СохранитьНастройкиНаСервере();
	КонецЕсли;	
	Закрыть();
КонецПроцедуры

#КонецОбласти

